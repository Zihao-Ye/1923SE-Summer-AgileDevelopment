<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace ="com.example.SESummer.Dao.QuestionnaireDao" >
    <!-- 创建问卷 -->
    <insert id="createQuestionnaire" parameterType="Questionnaire">
        insert into questionnaire(title, create_time, kind, question_pwd, is_private, start_time, end_time, masterid,questionnaire_note)
        values(#{title},#{createTime},#{kind},#{questionPwd},#{isPrivate},#{startTime},#{endTime},#{masterID},#{questionnaireNote})
    </insert>
    <!-- 添加问题 -->
    <insert id="addQuestion" parameterType="QuestionContent">
        insert into question_content(questionnaireid,question_kind,question_no,question_note)
        values(#{questionnaireID},#{questionKind},#{questionNo},#{questionNote})
    </insert>
    <!-- 添加选择题选项 -->
    <insert id="setOptions" parameterType="QuestionOption">
        insert into question_option(question_kind, question_contentid, option_content, left_volume)
        values(#{questionKind},#{questionContentID},#{optionContent},#{leftVolume})
    </insert>
    <!-- 添加评分题分数上限-->
    <insert id="setScore" parameterType="ScoreQuestion">
        insert into score_question(question_contentid, max_score)
        values(#{questionContentID},#{maxScore})
    </insert>
    <!-- 问题排序-->
    <update id="rankQuestion" parameterType="QuestionContent">
        update question_content
        set question_no=#{questionNo}
        where question_contentid=#{questionContentID}
    </update>
    <!-- 将问卷收入回收站-->
    <update id="setRubbish" parameterType="Integer">
        update questionnaire
        set is_rubbish=1
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 将问卷移出回收站-->
    <update id="recoverRubbish" parameterType="Integer">
        update questionnaire
        set is_rubbish=0
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 根据用户ID获取所有不在回收站里的问卷-->
    <select id="getQuestionnaireListNotRubbishByUserID" resultType="Questionnaire">
        select *
        from questionnaire
        where masterid=#{masterID} and is_rubbish=0
        order by create_time desc
    </select>
    <!-- 根据用户ID获取所有在回收站里的问卷-->
    <select id="getQuestionnaireListIsRubbishByUserID" resultType="Questionnaire">
        select *
        from questionnaire
        where masterid=#{masterID} and is_rubbish=1
    </select>
    <!-- 发布问卷-->
    <update id="publishQuestionnaire" parameterType="Questionnaire">
        update questionnaire
        set have_publish=1,start_time=#{startTime}
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 开启问卷-->
    <update id="openQuestionnaire" parameterType="Integer">
        update questionnaire
        set is_visitable=1
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 关闭问卷-->
    <update id="closeQuestionnaire" parameterType="Questionnaire">
        update questionnaire
        set is_visitable=0,end_time=#{endTime}
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 预览问卷-问卷信息-->
    <select id="getQuestionnaireByQuestionnaireID" resultType="Questionnaire">
        select *
        from questionnaire
        where questionnaireid=#{questionnaireID}
    </select>
    <!-- 预览问卷-问卷题目信息-->
    <select id="getAllQuestionContentOfQuestionnaireByQuestionnaireID" resultType="QuestionContent">
        select *
        from question_content
        where questionnaireid=#{questionnaireID}
        order by question_no
    </select>
    <!-- 预览问卷-题目选项信息-->
    <select id="getAllQuestionOptionOfQuestionByQuestionContentID" resultType="QuestionOption">
        select *
        from question_option
        where question_contentid=#{questionContentID}
    </select>
    <!-- 预览问卷-评分题分数上限-->
    <select id="getScoreQuestionByQuestionContentID" resultType="ScoreQuestion">
        select *
        from score_question
        where question_contentid=#{questionContentID}
    </select>
    <!-- 编辑问卷-修改问卷信息-->
    <update id="editQuestionnaire" parameterType="Questionnaire">
        update questionnaire
        set title=#{title},question_pwd=#{questionPwd},is_private=#{isPrivate},questionnaire_note=#{questionnaireNote}
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 编辑问卷-修改问题信息-->
    <update id="editQuestion" parameterType="QuestionContent">
        update question_content
        set question_content=#{questionContent},require_sig=#{requireSig},question_note=#{questionNote}
        where question_contentid=#{questionContentID}
    </update>
    <!-- 编辑问卷-删除题目的选项-->
    <delete id="delQuestionOptionRelatedToQuestion" parameterType="Integer">
        delete from question_option
        where question_contentid=#{questionContentID}
    </delete>
    <!-- 编辑问卷-删除题目-->
    <delete id="delQuestion" parameterType="Integer">
        delete from question_content
        where question_contentid=#{questionContentID}
    </delete>
    <!-- 编辑问卷-删除选项-->
    <delete id="delQuestionOption" parameterType="Integer">
        delete from question_option
        where question_optionid=#{questionOptionID}
    </delete>
    <!-- 复制问卷-复制问卷基本信息-->
    <insert id="copyQuestionnaire" parameterType="Questionnaire">
        insert into questionnaire(title, create_time, kind, question_pwd, is_private,start_time, end_time, masterid,questionnaire_note)
        values(#{title},#{createTime},#{kind},#{questionPwd},#{isPrivate},#{startTime},#{endTime},#{masterID},#{questionNote})
    </insert>
    <!-- 获取最近创建的问卷-->
    <select id="getRecentQuestionnaireByUserID" resultType="Questionnaire">
        select *
        from questionnaire
        where masterid=#{masterID}
        order by create_time desc
    </select>
    <!-- 复制问卷-复制问题基本信息 -->
    <insert id="copyQuestion" parameterType="QuestionContent">
        insert into question_content(questionnaireid, question_kind, require_sig, question_content, question_no, question_note)
        values(#{questionnaireID},#{questionKind},#{requireSig},#{questionContent},#{questionNo},#{questionNote})
    </insert>
    <!-- 获取最近创建的问题-->
    <select id="getRecentQuestionByQuestionnaireID" resultType="QuestionContent">
        select *
        from question_content
        where questionnaireid=#{questionnairedID}
        order by question_contentid desc
    </select>
</mapper>