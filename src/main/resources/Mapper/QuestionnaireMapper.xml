<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace ="com.example.SESummer.Dao.QuestionnaireDao" >
    <!-- 创建问卷 -->
    <insert id="createQuestionnaire" parameterType="Questionnaire">
        insert into questionnaire(title, create_time, kind, masterid,questionnaire_note,end_message)
        values(#{title},#{createTime},#{kind},#{masterID},#{questionnaireNote},#{endMessage})
    </insert>
    <!-- 修改问卷加密ID-->
    <update id="editEncryptQuestionnaireID" parameterType="Questionnaire">
        update questionnaire
        set encrypt_questionnaireid=#{encryptQuestionnaireID}
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 获取用户最新创建的问卷-->
    <select id="getRecentQuestionnaireCreateByUserID" resultType="Questionnaire">
        select *
        from questionnaire
        where masterid=#{userID}
        order by create_time desc
        limit 0,1
    </select>
    <!-- 添加问题 -->
    <insert id="addQuestion" parameterType="QuestionContent">
        insert into question_content(questionnaireid,question_kind,question_no,question_note)
        values(#{questionnaireID},#{questionKind},#{questionNo},#{questionNote})
    </insert>
    <!-- 获取最近创建的问题-->
    <select id="getRecentQuestionByQuestionnaireID" resultType="QuestionContent">
        select *
        from question_content
        where questionnaireid=#{questionnairedID}
        order by question_contentid desc
        limit 0,1
    </select>
    <!-- 添加选择题选项 -->
    <insert id="setOptions" parameterType="QuestionOption">
        insert into question_option(option_kind, question_contentid, option_content, left_volume,is_answer,option_no)
        values(#{optionKind},#{questionContentID},#{optionContent},#{leftVolume},#{isAnswer},#{optionNo})
    </insert>
    <!-- 根据问题ID于选项序号获取选项-->
    <select id="getRecentQuestionOptionByQuestionContentIDAndOptionNo" resultType="QuestionOption">
        select *
        from question_option
        where question_contentid=#{questionContentID} and option_no=#{optionNo}
    </select>
    <!-- 添加评分题分数上限-->
    <insert id="setScore" parameterType="ScoreQuestion">
        insert into score_question(question_contentid, max_score,start_word,end_word)
        values(#{questionContentID},#{maxScore},#{startWord},#{endWord})
    </insert>
    <!-- 获取问题的评分题信息-->
    <select id="getRecentScoreQuestionByQuestionContentID" resultType="ScoreQuestion">
        select *
        from score_question
        where question_contentid=#{questionContentID}
    </select>
    <!-- 设置考试填空题答案-->
    <insert id="setCompletionAnswer" parameterType="CompletionQuestion">
        insert into completion_question(question_contentid, answer)
        values(#{questionContentID},#{answer})
    </insert>
    <!-- 获取考试填空题的答案-->
    <select id="getRecentCompletionQuestionByQuestionContentID" resultType="CompletionQuestion">
        select *
        from completion_question
        where question_contentid=#{questionContentID}
    </select>
    <!-- 问题排序-->
    <update id="rankQuestion" parameterType="QuestionContent">
        update question_content
        set question_no=#{questionNo}
        where question_contentid=#{questionContentID}
    </update>
    <!-- 将问卷收入回收站-->
    <update id="setRubbish" parameterType="Integer">
        update questionnaire
        set is_rubbish=1
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 将问卷移出回收站-->
    <update id="recoverRubbish" parameterType="Integer">
        update questionnaire
        set is_rubbish=0
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 将回收站中的问卷删除-->
    <update id="delRubbish" parameterType="Integer">
        update questionnaire
        set is_rubbish=2
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 根据用户ID获取所有不在回收站里的问卷-->
    <select id="getQuestionnaireListNotRubbishByUserID" resultType="Questionnaire">
        select *
        from questionnaire
        where masterid=#{masterID} and is_rubbish=0
        order by create_time desc
    </select>
    <!-- 根据用户ID获取所有在回收站里的问卷-->
    <select id="getQuestionnaireListIsRubbishByUserID" resultType="Questionnaire">
        select *
        from questionnaire
        where masterid=#{masterID} and is_rubbish=1
    </select>
    <!-- 发布问卷-->
    <update id="publishQuestionnaire" parameterType="Questionnaire">
        update questionnaire
        set have_publish=1,is_visitable=1
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 开启问卷-->
    <update id="openQuestionnaire" parameterType="Integer">
        update questionnaire
        set is_visitable=1
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 关闭问卷-->
    <update id="closeQuestionnaire" parameterType="Questionnaire">
        update questionnaire
        set is_visitable=0
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 预览问卷-问卷信息-->
    <select id="getQuestionnaireByQuestionnaireID" resultType="Questionnaire">
        select *
        from questionnaire
        where questionnaireid=#{questionnaireID}
    </select>
    <!-- 预览问卷-问卷题目信息-->
    <select id="getAllQuestionContentOfQuestionnaireByQuestionnaireID" resultType="QuestionContent">
        select *
        from question_content
        where questionnaireid=#{questionnaireID}
        order by question_no
    </select>
    <!-- 预览问卷-题目选项信息-->
    <select id="getAllQuestionOptionOfQuestionByQuestionContentID" resultType="QuestionOption">
        select *
        from question_option
        where question_contentid=#{questionContentID}
        order by option_no
    </select>
    <!-- 预览问卷-评分题分数上限-->
    <select id="getScoreQuestionByQuestionContentID" resultType="ScoreQuestion">
        select *
        from score_question
        where question_contentid=#{questionContentID}
    </select>
    <!-- 预览问卷-考试填空题答案-->
    <select id="getCompletionQuestionByQuestionContentID" resultType="CompletionQuestion">
        select *
        from completion_question
        where question_contentid=#{questionContentID}
    </select>
    <!-- 编辑问卷-修改问卷信息-->
    <update id="editQuestionnaire" parameterType="Questionnaire">
        update questionnaire
        set title=#{title},end_time=#{endTime},questionnaire_note=#{questionnaireNote},end_message=#{endMessage}
        where questionnaireid=#{questionnaireID}
    </update>
    <!-- 编辑问卷-修改问题信息-->
    <update id="editQuestion" parameterType="QuestionContent">
        update question_content
        set question_content=#{questionContent},require_sig=#{requireSig},question_note=#{questionNote},question_score=#{questionScore}
        where question_contentid=#{questionContentID}
    </update>
    <!-- 编辑问卷-修改选项信息-->
    <update id="editOption" parameterType="QuestionOption">
        update question_option
        set option_kind=#{optionKind},option_content=#{optionContent},left_volume=#{leftVolume},is_answer=#{isAnswer},option_no=#{optionNo}
        where question_optionid=#{questionOptionID}
    </update>
    <!-- 编辑问卷-修改评分题信息-->
    <update id="editScore" parameterType="ScoreQuestion">
        update score_question
        set max_score=#{maxScore},start_word=#{startWord},end_word=#{endWord}
        where score_questionid=#{scoreQuestionID}
    </update>
    <!-- 编辑问卷-修改考试填空题答案-->
    <update id="editCompletion" parameterType="CompletionQuestion">
        update completion_question
        set answer=#{answer}
        where completion_questionid=#{completionQuestionID}
    </update>
    <!-- 编辑问卷-删除题目的选项-->
    <delete id="delQuestionOptionRelatedToQuestion" parameterType="Integer">
        delete from question_option
        where question_contentid=#{questionContentID}
    </delete>
    <!-- 编辑问卷-删除评分题的评分上限-->
    <delete id="delScoreQuestionRelatedToQuestion" parameterType="Integer">
        delete from score_question
        where question_contentid=#{questionContentID}
    </delete>
    <!-- 编辑问卷-删除填空题的答案-->
    <delete id="delCompletionQuestionRelatedToQuestion" parameterType="Integer">
        delete from completion_question
        where question_contentid=#{questionContentID}
    </delete>
    <!-- 编辑问卷-删除题目-->
    <delete id="delQuestion" parameterType="Integer">
        delete from question_content
        where question_contentid=#{questionContentID}
    </delete>
    <!-- 编辑问卷-删除选项-->
    <delete id="delQuestionOption" parameterType="Integer">
        delete from question_option
        where question_optionid=#{questionOptionID}
    </delete>
    <!-- 复制问卷-复制问卷基本信息-->
    <insert id="copyQuestionnaire" parameterType="Questionnaire">
        insert into questionnaire(title, create_time, kind, end_time, masterid,questionnaire_note,end_message)
        values(#{title},#{createTime},#{kind},#{endTime},#{masterID},#{questionnaireNote},#{endMessage})
    </insert>
    <!-- 获取最近创建的问卷-->
    <select id="getRecentQuestionnaireByUserID" resultType="Questionnaire">
        select *
        from questionnaire
        where masterid=#{masterID}
        order by create_time desc
        limit 0,1
    </select>
    <!-- 复制问卷-复制问题基本信息 -->
    <insert id="copyQuestion" parameterType="QuestionContent">
        insert into question_content(questionnaireid, question_kind, require_sig, question_content, question_no, question_note,question_score)
        values(#{questionnaireID},#{questionKind},#{requireSig},#{questionContent},#{questionNo},#{questionNote},#{questionScore})
    </insert>
    <!-- 根据加密ID获取原ID-->
    <select id="getOriginQuestionnaireID" resultType="Integer">
        select questionnaireid
        from questionnaire
        where encrypt_questionnaireid=#{encryptQuestionnaireID}
    </select>
    <!-- 添加默认问题-->
    <insert id="addDefaultQuestion" parameterType="QuestionContent">
        insert into question_content(questionnaireid, question_kind, require_sig, question_content, question_no, question_note, question_score)
        values(#{questionnaireID},#{questionKind},#{requireSig},#{questionContent},#{questionNo},#{questionNote},#{questionScore})
    </insert>
    <!-- 添加默认选项-->
    <insert id="addDefaultOption" parameterType="QuestionOption">
        insert into question_option(option_kind, question_contentid, option_content, left_volume, is_answer, option_no)
        values(#{optionKind},#{questionContentID},#{optionContent},#{leftVolume},#{isAnswer},#{optionNo})
    </insert>
    <!-- 根据问题ID获取问题-->
    <select id="getQuestionByQuestionContentID" resultType="QuestionContent">
        select *
        from question_content
        where question_contentid=#{questionContentID}
    </select>
    <!-- 获取选择的所有正确选项-->
    <select id="getAllAnswerOptionOfQuestion" resultType="QuestionOption">
        select *
        from question_option
        where question_contentid=#{questionContentID} and is_answer=1
    </select>
    <!-- 根据选项ID获取选项-->
    <select id="getQuestionOptionByQuestionOptionID" resultType="QuestionOption">
        select *
        from question_option
        where question_optionid=#{questionOptionID}
    </select>
    <!-- 设置乱序-->
    <insert id="setTestQuestionRank" parameterType="TestQuestionRank">
        insert into test_question_rank(userid, questionnaireid,question_contentid, question_no, show_no)
        values(#{userID},#{questionnaireID},#{questionContentID},#{questionNo},#{showNo})
    </insert>
    <!-- 获取用户对某张考试问卷的题目顺序-->
    <select id="getUserTestQuestionRank" resultType="TestQuestionRank">
        select *
        from test_question_rank
        where userid=#{userID} and questionnaireid=#{questionnaireID}
        order by question_no
    </select>
</mapper>